# https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest
# https://github.com/terraform-aws-modules/terraform-aws-eks
components:
  terraform:
    eks/test-eks-karpenter:
      metadata:
        component: eks
      vars:
        vpc_id: '{{ (atmos.Component "vpc/test-eks" .stack).outputs.vpc_id }}'
        subnet_ids:
          - '{{ index ((atmos.Component "vpc/test-eks" .stack).outputs.private_subnets ) 0 }}'
          - '{{ index ((atmos.Component "vpc/test-eks" .stack).outputs.private_subnets ) 1 }}'
          - '{{ index ((atmos.Component "vpc/test-eks" .stack).outputs.private_subnets ) 2 }}'
        control_plane_subnet_ids:
          - '{{ index ((atmos.Component "vpc/test-eks" .stack).outputs.intra_subnets ) 0 }}'
          - '{{ index ((atmos.Component "vpc/test-eks" .stack).outputs.intra_subnets ) 1 }}'
          - '{{ index ((atmos.Component "vpc/test-eks" .stack).outputs.intra_subnets ) 2 }}'

        cluster_name: test-eks-v0
        # https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html
        # aws eks describe-addon-versions | jq -r ".addons[] | .addonVersions[] | .compatibilities[] | .clusterVersion" | sort | uniq
        cluster_version: "1.31"

        # Cluster access entry
        cluster_endpoint_public_access: true
        cluster_endpoint_public_access_cidrs:
          - 0.0.0.0/0

        # To add the current caller identity as an administrator
        enable_cluster_creator_admin_permissions: true

        # https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html
        # https://docs.aws.amazon.com/eks/latest/userguide/managing-add-ons.html
        # aws eks describe-addon-versions --kubernetes-version 1.31 --addon-name vpc-cni \
        #   --query 'addons[].addonVersions[].{Version: addonVersion, Defaultversion: compatibilities[0].defaultVersion}' --output table
        cluster_addons:
          coredns:
            addon_version: v1.11.3-eksbuild.1
          kube-proxy:
            addon_version: v1.31.0-eksbuild.2
          # increase pod limit
          # https://github.com/aws/amazon-vpc-cni-k8s/blob/master/docs/prefix-and-ip-target.md
          vpc-cni:
            addon_version: v1.18.3-eksbuild.2
            before_compute: true
            configuration_values: |
              {
                "env": {
                  "ENABLE_PREFIX_DELEGATION": "true",
                  "WARM_IP_TARGET": "1",
                  "MINIMUM_IP_TARGET": "1"
                }
              }
          eks-pod-identity-agent:
            addon_version: v1.3.2-eksbuild.2

        # used for aws alb ingress controller, autoscaler
        enable_irsa: true

        eks_managed_node_groups:
          test-eks-main-mng:
            min_size: 1
            desired_size: 1
            max_size: 3

            instance_types:
              - t4g.micro
              # - t4g.nano # TF provision fails
            ami_type: AL2023_ARM_64_STANDARD
            capacity_type: SPOT # ON_DEMEAND

            taints:
              # This Taint aims to keep just EKS Addons and Karpenter running on this MNG
              # The pods that do not tolerate this taint should run on nodes created by Karpenter
              addons:
                key: CriticalAddonsOnly
                value: true
                effect: NO_SCHEDULE

        node_security_group_tags:
          # NOTE - if creating multiple security groups with this module, only tag the
          # security group that Karpenter should utilize with the following tag
          # (i.e. - at most, only one security group should have this tag in your account)
          karpenter.sh/discovery: test-eks-v0
